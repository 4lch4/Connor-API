version: 3

env:
  DOPPLER_PROJECT_NAME: connor
  DOPPLER_CONFIG_NAME: nonprod
  DOCKER_IMAGE_NAME: 4lch4/connor-api
  DOCKER_CONTAINER_NAME: connor-api
  VERSION_TAG: '0.0.1'
  APP_PORT: 8080

tasks:
  display:variables:
    aliases: [dv, vars]
    silent: true
    desc: Writes/echoes the environment variables that are set within the Taskfile to the console/STDOUT.
    cmds:
      - echo "----------------------------------------------"
      - echo "DOPPLER_PROJECT_NAME = {{ .DOPPLER_PROJECT_NAME }}"
      - echo "DOPPLER_CONFIG_NAME = {{ .DOPPLER_CONFIG_NAME }}"
      - echo "----------------------------------------------"
      - echo "Doppler Secrets:"
      - doppler secrets download --no-file --project {{ .DOPPLER_PROJECT_NAME }} --config {{ .DOPPLER_CONFIG_NAME }} | jq
      - echo "----------------------------------------------"
      - echo "DOCKER_CONTAINER_NAME = {{ .DOCKER_CONTAINER_NAME }}"
      - echo "DOCKER_IMAGE_NAME = {{ .DOCKER_IMAGE_NAME }}"
      - echo "----------------------------------------------"

  pretty:
    aliases: [p, format, fmt]
    silent: false
    desc: Uses the Prettier CLI tool to format the codebase.
    cmds: ['prettier --write .']

  build:
    aliases: [bd]
    silent: false
    desc: Builds the project into a Docker Image.
    cmds:
      - docker build -t {{ .DOCKER_IMAGE_NAME }}:latest -t {{ .DOCKER_IMAGE_NAME }}:{{ .VERSION_TAG }} .

  clean:
    aliases: [c]
    silent: false
    desc: Stops & deletes the Docker container running the project.
    deps: ['stop']
    cmds: ['docker rm {{ .DOCKER_CONTAINER_NAME }}']

  start:
    aliases: [up]
    silent: false
    desc: Starts the project by ensuring a Docker Image was built and then running that Image in a container.
    deps: ['build']
    cmds:
      - |
        docker run -d -p {{ .APP_PORT }}:{{ .APP_PORT }} \
        --volume "$(pwd)/../brain/vectorStore/:/vectorStore" \
        --env-file <(doppler secrets download --no-file --format docker --project connor --config nonprod) \
        --name {{ .DOCKER_CONTAINER_NAME }} \
        {{ .DOCKER_IMAGE_NAME }}:{{ .VERSION_TAG }}

  stop:
    aliases: [down]
    silent: false
    desc: Stops the Docker Container that's locally running the website.
    cmds: ['docker stop {{ .DOCKER_CONTAINER_NAME }}']

  push:
    aliases: [dd]
    silent: false
    desc: Push the Docker Image, with all tags, to your configured registry.
    deps: ['build']
    cmds: ['docker push --all-tags {{ .DOCKER_IMAGE_NAME }}']

  refresh:
    cmds:
      # - docker compose down
      - task build
      - docker stop {{ .DOCKER_CONTAINER_NAME }}
      - docker rm {{ .DOCKER_CONTAINER_NAME }}
      - task start
